//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Forbbiden_FEIModel", "FK_match_cards_card", "card", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ForbbidenIslandFEI_Construction.card), "match_cards", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ForbbidenIslandFEI_Construction.match_cards), true)]
[assembly: EdmRelationshipAttribute("Forbbiden_FEIModel", "FK_match_cards_match", "matches", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ForbbidenIslandFEI_Construction.matches), "match_cards", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ForbbidenIslandFEI_Construction.match_cards), true)]
[assembly: EdmRelationshipAttribute("Forbbiden_FEIModel", "FK_match_minigame_minigame", "minigame", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ForbbidenIslandFEI_Construction.minigame), "match_minigames", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ForbbidenIslandFEI_Construction.match_minigames), true)]
[assembly: EdmRelationshipAttribute("Forbbiden_FEIModel", "FK_match_minigames_match", "matches", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ForbbidenIslandFEI_Construction.matches), "match_minigames", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ForbbidenIslandFEI_Construction.match_minigames), true)]
[assembly: EdmRelationshipAttribute("Forbbiden_FEIModel", "FK_match_players_match", "matches", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ForbbidenIslandFEI_Construction.matches), "match_players", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ForbbidenIslandFEI_Construction.match_players), true)]
[assembly: EdmRelationshipAttribute("Forbbiden_FEIModel", "FK_players_player", "player", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ForbbidenIslandFEI_Construction.player), "match_players", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ForbbidenIslandFEI_Construction.match_players), true)]
[assembly: EdmRelationshipAttribute("Forbbiden_FEIModel", "FK_match_tiles_match", "matches", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ForbbidenIslandFEI_Construction.matches), "match_tiles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ForbbidenIslandFEI_Construction.match_tiles), true)]
[assembly: EdmRelationshipAttribute("Forbbiden_FEIModel", "FK_tile_match_tile", "tile", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ForbbidenIslandFEI_Construction.tile), "match_tiles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ForbbidenIslandFEI_Construction.match_tiles), true)]
[assembly: EdmRelationshipAttribute("Forbbiden_FEIModel", "FK_player_socialmedia", "player", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ForbbidenIslandFEI_Construction.player), "player_socialmedia", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ForbbidenIslandFEI_Construction.player_socialmedia), true)]

#endregion

namespace ForbbidenIslandFEI_Construction
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Forbbiden_FEIEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Forbbiden_FEIEntities object using the connection string found in the 'Forbbiden_FEIEntities' section of the application configuration file.
        /// </summary>
        public Forbbiden_FEIEntities() : base("name=Forbbiden_FEIEntities", "Forbbiden_FEIEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Forbbiden_FEIEntities object.
        /// </summary>
        public Forbbiden_FEIEntities(string connectionString) : base(connectionString, "Forbbiden_FEIEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Forbbiden_FEIEntities object.
        /// </summary>
        public Forbbiden_FEIEntities(EntityConnection connection) : base(connection, "Forbbiden_FEIEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<card> card
        {
            get
            {
                if ((_card == null))
                {
                    _card = base.CreateObjectSet<card>("card");
                }
                return _card;
            }
        }
        private ObjectSet<card> _card;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<card_catalog> card_catalog
        {
            get
            {
                if ((_card_catalog == null))
                {
                    _card_catalog = base.CreateObjectSet<card_catalog>("card_catalog");
                }
                return _card_catalog;
            }
        }
        private ObjectSet<card_catalog> _card_catalog;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<match_cards> match_cards
        {
            get
            {
                if ((_match_cards == null))
                {
                    _match_cards = base.CreateObjectSet<match_cards>("match_cards");
                }
                return _match_cards;
            }
        }
        private ObjectSet<match_cards> _match_cards;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<match_minigames> match_minigames
        {
            get
            {
                if ((_match_minigames == null))
                {
                    _match_minigames = base.CreateObjectSet<match_minigames>("match_minigames");
                }
                return _match_minigames;
            }
        }
        private ObjectSet<match_minigames> _match_minigames;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<match_players> match_players
        {
            get
            {
                if ((_match_players == null))
                {
                    _match_players = base.CreateObjectSet<match_players>("match_players");
                }
                return _match_players;
            }
        }
        private ObjectSet<match_players> _match_players;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<match_tiles> match_tiles
        {
            get
            {
                if ((_match_tiles == null))
                {
                    _match_tiles = base.CreateObjectSet<match_tiles>("match_tiles");
                }
                return _match_tiles;
            }
        }
        private ObjectSet<match_tiles> _match_tiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<matches> matches
        {
            get
            {
                if ((_matches == null))
                {
                    _matches = base.CreateObjectSet<matches>("matches");
                }
                return _matches;
            }
        }
        private ObjectSet<matches> _matches;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<minigame> minigame
        {
            get
            {
                if ((_minigame == null))
                {
                    _minigame = base.CreateObjectSet<minigame>("minigame");
                }
                return _minigame;
            }
        }
        private ObjectSet<minigame> _minigame;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<player> player
        {
            get
            {
                if ((_player == null))
                {
                    _player = base.CreateObjectSet<player>("player");
                }
                return _player;
            }
        }
        private ObjectSet<player> _player;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<player_socialmedia> player_socialmedia
        {
            get
            {
                if ((_player_socialmedia == null))
                {
                    _player_socialmedia = base.CreateObjectSet<player_socialmedia>("player_socialmedia");
                }
                return _player_socialmedia;
            }
        }
        private ObjectSet<player_socialmedia> _player_socialmedia;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<tile> tile
        {
            get
            {
                if ((_tile == null))
                {
                    _tile = base.CreateObjectSet<tile>("tile");
                }
                return _tile;
            }
        }
        private ObjectSet<tile> _tile;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the card EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocard(card card)
        {
            base.AddObject("card", card);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the card_catalog EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocard_catalog(card_catalog card_catalog)
        {
            base.AddObject("card_catalog", card_catalog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the match_cards EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTomatch_cards(match_cards match_cards)
        {
            base.AddObject("match_cards", match_cards);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the match_minigames EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTomatch_minigames(match_minigames match_minigames)
        {
            base.AddObject("match_minigames", match_minigames);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the match_players EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTomatch_players(match_players match_players)
        {
            base.AddObject("match_players", match_players);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the match_tiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTomatch_tiles(match_tiles match_tiles)
        {
            base.AddObject("match_tiles", match_tiles);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the matches EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTomatches(matches matches)
        {
            base.AddObject("matches", matches);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the minigame EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTominigame(minigame minigame)
        {
            base.AddObject("minigame", minigame);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the player EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToplayer(player player)
        {
            base.AddObject("player", player);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the player_socialmedia EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToplayer_socialmedia(player_socialmedia player_socialmedia)
        {
            base.AddObject("player_socialmedia", player_socialmedia);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the tile EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTotile(tile tile)
        {
            base.AddObject("tile", tile);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Forbbiden_FEIModel", Name="card")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class card : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new card object.
        /// </summary>
        /// <param name="card_id">Initial value of the card_id property.</param>
        /// <param name="card_name">Initial value of the card_name property.</param>
        /// <param name="description">Initial value of the description property.</param>
        /// <param name="type">Initial value of the type property.</param>
        public static card Createcard(global::System.Int32 card_id, global::System.String card_name, global::System.String description, global::System.String type)
        {
            card card = new card();
            card.card_id = card_id;
            card.card_name = card_name;
            card.description = description;
            card.type = type;
            return card;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_id
        {
            get
            {
                return _card_id;
            }
            set
            {
                if (_card_id != value)
                {
                    Oncard_idChanging(value);
                    ReportPropertyChanging("card_id");
                    _card_id = StructuralObject.SetValidValue(value, "card_id");
                    ReportPropertyChanged("card_id");
                    Oncard_idChanged();
                }
            }
        }
        private global::System.Int32 _card_id;
        partial void Oncard_idChanging(global::System.Int32 value);
        partial void Oncard_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String card_name
        {
            get
            {
                return _card_name;
            }
            set
            {
                Oncard_nameChanging(value);
                ReportPropertyChanging("card_name");
                _card_name = StructuralObject.SetValidValue(value, false, "card_name");
                ReportPropertyChanged("card_name");
                Oncard_nameChanged();
            }
        }
        private global::System.String _card_name;
        partial void Oncard_nameChanging(global::System.String value);
        partial void Oncard_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, false, "description");
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String type
        {
            get
            {
                return _type;
            }
            set
            {
                OntypeChanging(value);
                ReportPropertyChanging("type");
                _type = StructuralObject.SetValidValue(value, false, "type");
                ReportPropertyChanged("type");
                OntypeChanged();
            }
        }
        private global::System.String _type;
        partial void OntypeChanging(global::System.String value);
        partial void OntypeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Forbbiden_FEIModel", "FK_match_cards_card", "match_cards")]
        public EntityCollection<match_cards> match_cards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<match_cards>("Forbbiden_FEIModel.FK_match_cards_card", "match_cards");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<match_cards>("Forbbiden_FEIModel.FK_match_cards_card", "match_cards", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Forbbiden_FEIModel", Name="card_catalog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class card_catalog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new card_catalog object.
        /// </summary>
        /// <param name="card_type">Initial value of the card_type property.</param>
        public static card_catalog Createcard_catalog(global::System.String card_type)
        {
            card_catalog card_catalog = new card_catalog();
            card_catalog.card_type = card_type;
            return card_catalog;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String card_type
        {
            get
            {
                return _card_type;
            }
            set
            {
                if (_card_type != value)
                {
                    Oncard_typeChanging(value);
                    ReportPropertyChanging("card_type");
                    _card_type = StructuralObject.SetValidValue(value, false, "card_type");
                    ReportPropertyChanged("card_type");
                    Oncard_typeChanged();
                }
            }
        }
        private global::System.String _card_type;
        partial void Oncard_typeChanging(global::System.String value);
        partial void Oncard_typeChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Forbbiden_FEIModel", Name="match_cards")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class match_cards : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new match_cards object.
        /// </summary>
        /// <param name="match_cards_id">Initial value of the match_cards_id property.</param>
        /// <param name="match_id">Initial value of the match_id property.</param>
        /// <param name="card_id">Initial value of the card_id property.</param>
        public static match_cards Creatematch_cards(global::System.Int32 match_cards_id, global::System.Int32 match_id, global::System.Int32 card_id)
        {
            match_cards match_cards = new match_cards();
            match_cards.match_cards_id = match_cards_id;
            match_cards.match_id = match_id;
            match_cards.card_id = card_id;
            return match_cards;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 match_cards_id
        {
            get
            {
                return _match_cards_id;
            }
            set
            {
                if (_match_cards_id != value)
                {
                    Onmatch_cards_idChanging(value);
                    ReportPropertyChanging("match_cards_id");
                    _match_cards_id = StructuralObject.SetValidValue(value, "match_cards_id");
                    ReportPropertyChanged("match_cards_id");
                    Onmatch_cards_idChanged();
                }
            }
        }
        private global::System.Int32 _match_cards_id;
        partial void Onmatch_cards_idChanging(global::System.Int32 value);
        partial void Onmatch_cards_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 match_id
        {
            get
            {
                return _match_id;
            }
            set
            {
                Onmatch_idChanging(value);
                ReportPropertyChanging("match_id");
                _match_id = StructuralObject.SetValidValue(value, "match_id");
                ReportPropertyChanged("match_id");
                Onmatch_idChanged();
            }
        }
        private global::System.Int32 _match_id;
        partial void Onmatch_idChanging(global::System.Int32 value);
        partial void Onmatch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_id
        {
            get
            {
                return _card_id;
            }
            set
            {
                Oncard_idChanging(value);
                ReportPropertyChanging("card_id");
                _card_id = StructuralObject.SetValidValue(value, "card_id");
                ReportPropertyChanged("card_id");
                Oncard_idChanged();
            }
        }
        private global::System.Int32 _card_id;
        partial void Oncard_idChanging(global::System.Int32 value);
        partial void Oncard_idChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Forbbiden_FEIModel", "FK_match_cards_card", "card")]
        public card card
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<card>("Forbbiden_FEIModel.FK_match_cards_card", "card").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<card>("Forbbiden_FEIModel.FK_match_cards_card", "card").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<card> cardReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<card>("Forbbiden_FEIModel.FK_match_cards_card", "card");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<card>("Forbbiden_FEIModel.FK_match_cards_card", "card", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Forbbiden_FEIModel", "FK_match_cards_match", "matches")]
        public matches matches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<matches>("Forbbiden_FEIModel.FK_match_cards_match", "matches").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<matches>("Forbbiden_FEIModel.FK_match_cards_match", "matches").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<matches> matchesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<matches>("Forbbiden_FEIModel.FK_match_cards_match", "matches");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<matches>("Forbbiden_FEIModel.FK_match_cards_match", "matches", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Forbbiden_FEIModel", Name="match_minigames")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class match_minigames : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new match_minigames object.
        /// </summary>
        /// <param name="match_minigames_id">Initial value of the match_minigames_id property.</param>
        /// <param name="match_id">Initial value of the match_id property.</param>
        /// <param name="minigame_id">Initial value of the minigame_id property.</param>
        public static match_minigames Creatematch_minigames(global::System.Int32 match_minigames_id, global::System.Int32 match_id, global::System.Int32 minigame_id)
        {
            match_minigames match_minigames = new match_minigames();
            match_minigames.match_minigames_id = match_minigames_id;
            match_minigames.match_id = match_id;
            match_minigames.minigame_id = minigame_id;
            return match_minigames;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 match_minigames_id
        {
            get
            {
                return _match_minigames_id;
            }
            set
            {
                if (_match_minigames_id != value)
                {
                    Onmatch_minigames_idChanging(value);
                    ReportPropertyChanging("match_minigames_id");
                    _match_minigames_id = StructuralObject.SetValidValue(value, "match_minigames_id");
                    ReportPropertyChanged("match_minigames_id");
                    Onmatch_minigames_idChanged();
                }
            }
        }
        private global::System.Int32 _match_minigames_id;
        partial void Onmatch_minigames_idChanging(global::System.Int32 value);
        partial void Onmatch_minigames_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 match_id
        {
            get
            {
                return _match_id;
            }
            set
            {
                Onmatch_idChanging(value);
                ReportPropertyChanging("match_id");
                _match_id = StructuralObject.SetValidValue(value, "match_id");
                ReportPropertyChanged("match_id");
                Onmatch_idChanged();
            }
        }
        private global::System.Int32 _match_id;
        partial void Onmatch_idChanging(global::System.Int32 value);
        partial void Onmatch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 minigame_id
        {
            get
            {
                return _minigame_id;
            }
            set
            {
                Onminigame_idChanging(value);
                ReportPropertyChanging("minigame_id");
                _minigame_id = StructuralObject.SetValidValue(value, "minigame_id");
                ReportPropertyChanged("minigame_id");
                Onminigame_idChanged();
            }
        }
        private global::System.Int32 _minigame_id;
        partial void Onminigame_idChanging(global::System.Int32 value);
        partial void Onminigame_idChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Forbbiden_FEIModel", "FK_match_minigame_minigame", "minigame")]
        public minigame minigame
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<minigame>("Forbbiden_FEIModel.FK_match_minigame_minigame", "minigame").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<minigame>("Forbbiden_FEIModel.FK_match_minigame_minigame", "minigame").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<minigame> minigameReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<minigame>("Forbbiden_FEIModel.FK_match_minigame_minigame", "minigame");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<minigame>("Forbbiden_FEIModel.FK_match_minigame_minigame", "minigame", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Forbbiden_FEIModel", "FK_match_minigames_match", "matches")]
        public matches matches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<matches>("Forbbiden_FEIModel.FK_match_minigames_match", "matches").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<matches>("Forbbiden_FEIModel.FK_match_minigames_match", "matches").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<matches> matchesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<matches>("Forbbiden_FEIModel.FK_match_minigames_match", "matches");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<matches>("Forbbiden_FEIModel.FK_match_minigames_match", "matches", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Forbbiden_FEIModel", Name="match_players")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class match_players : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new match_players object.
        /// </summary>
        /// <param name="match_players_id">Initial value of the match_players_id property.</param>
        /// <param name="match_id">Initial value of the match_id property.</param>
        /// <param name="player_id">Initial value of the player_id property.</param>
        public static match_players Creatematch_players(global::System.Int32 match_players_id, global::System.Int32 match_id, global::System.Int32 player_id)
        {
            match_players match_players = new match_players();
            match_players.match_players_id = match_players_id;
            match_players.match_id = match_id;
            match_players.player_id = player_id;
            return match_players;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 match_players_id
        {
            get
            {
                return _match_players_id;
            }
            set
            {
                if (_match_players_id != value)
                {
                    Onmatch_players_idChanging(value);
                    ReportPropertyChanging("match_players_id");
                    _match_players_id = StructuralObject.SetValidValue(value, "match_players_id");
                    ReportPropertyChanged("match_players_id");
                    Onmatch_players_idChanged();
                }
            }
        }
        private global::System.Int32 _match_players_id;
        partial void Onmatch_players_idChanging(global::System.Int32 value);
        partial void Onmatch_players_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 match_id
        {
            get
            {
                return _match_id;
            }
            set
            {
                Onmatch_idChanging(value);
                ReportPropertyChanging("match_id");
                _match_id = StructuralObject.SetValidValue(value, "match_id");
                ReportPropertyChanged("match_id");
                Onmatch_idChanged();
            }
        }
        private global::System.Int32 _match_id;
        partial void Onmatch_idChanging(global::System.Int32 value);
        partial void Onmatch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 player_id
        {
            get
            {
                return _player_id;
            }
            set
            {
                Onplayer_idChanging(value);
                ReportPropertyChanging("player_id");
                _player_id = StructuralObject.SetValidValue(value, "player_id");
                ReportPropertyChanged("player_id");
                Onplayer_idChanged();
            }
        }
        private global::System.Int32 _player_id;
        partial void Onplayer_idChanging(global::System.Int32 value);
        partial void Onplayer_idChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Forbbiden_FEIModel", "FK_match_players_match", "matches")]
        public matches matches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<matches>("Forbbiden_FEIModel.FK_match_players_match", "matches").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<matches>("Forbbiden_FEIModel.FK_match_players_match", "matches").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<matches> matchesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<matches>("Forbbiden_FEIModel.FK_match_players_match", "matches");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<matches>("Forbbiden_FEIModel.FK_match_players_match", "matches", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Forbbiden_FEIModel", "FK_players_player", "player")]
        public player player
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<player>("Forbbiden_FEIModel.FK_players_player", "player").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<player>("Forbbiden_FEIModel.FK_players_player", "player").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<player> playerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<player>("Forbbiden_FEIModel.FK_players_player", "player");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<player>("Forbbiden_FEIModel.FK_players_player", "player", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Forbbiden_FEIModel", Name="match_tiles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class match_tiles : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new match_tiles object.
        /// </summary>
        /// <param name="match_tiles_id">Initial value of the match_tiles_id property.</param>
        /// <param name="match_id">Initial value of the match_id property.</param>
        /// <param name="tile_id">Initial value of the tile_id property.</param>
        public static match_tiles Creatematch_tiles(global::System.Int32 match_tiles_id, global::System.Int32 match_id, global::System.Int32 tile_id)
        {
            match_tiles match_tiles = new match_tiles();
            match_tiles.match_tiles_id = match_tiles_id;
            match_tiles.match_id = match_id;
            match_tiles.tile_id = tile_id;
            return match_tiles;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 match_tiles_id
        {
            get
            {
                return _match_tiles_id;
            }
            set
            {
                if (_match_tiles_id != value)
                {
                    Onmatch_tiles_idChanging(value);
                    ReportPropertyChanging("match_tiles_id");
                    _match_tiles_id = StructuralObject.SetValidValue(value, "match_tiles_id");
                    ReportPropertyChanged("match_tiles_id");
                    Onmatch_tiles_idChanged();
                }
            }
        }
        private global::System.Int32 _match_tiles_id;
        partial void Onmatch_tiles_idChanging(global::System.Int32 value);
        partial void Onmatch_tiles_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 match_id
        {
            get
            {
                return _match_id;
            }
            set
            {
                Onmatch_idChanging(value);
                ReportPropertyChanging("match_id");
                _match_id = StructuralObject.SetValidValue(value, "match_id");
                ReportPropertyChanged("match_id");
                Onmatch_idChanged();
            }
        }
        private global::System.Int32 _match_id;
        partial void Onmatch_idChanging(global::System.Int32 value);
        partial void Onmatch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 tile_id
        {
            get
            {
                return _tile_id;
            }
            set
            {
                Ontile_idChanging(value);
                ReportPropertyChanging("tile_id");
                _tile_id = StructuralObject.SetValidValue(value, "tile_id");
                ReportPropertyChanged("tile_id");
                Ontile_idChanged();
            }
        }
        private global::System.Int32 _tile_id;
        partial void Ontile_idChanging(global::System.Int32 value);
        partial void Ontile_idChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Forbbiden_FEIModel", "FK_match_tiles_match", "matches")]
        public matches matches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<matches>("Forbbiden_FEIModel.FK_match_tiles_match", "matches").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<matches>("Forbbiden_FEIModel.FK_match_tiles_match", "matches").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<matches> matchesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<matches>("Forbbiden_FEIModel.FK_match_tiles_match", "matches");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<matches>("Forbbiden_FEIModel.FK_match_tiles_match", "matches", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Forbbiden_FEIModel", "FK_tile_match_tile", "tile")]
        public tile tile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tile>("Forbbiden_FEIModel.FK_tile_match_tile", "tile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tile>("Forbbiden_FEIModel.FK_tile_match_tile", "tile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<tile> tileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tile>("Forbbiden_FEIModel.FK_tile_match_tile", "tile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<tile>("Forbbiden_FEIModel.FK_tile_match_tile", "tile", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Forbbiden_FEIModel", Name="matches")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class matches : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new matches object.
        /// </summary>
        /// <param name="match_id">Initial value of the match_id property.</param>
        public static matches Creatematches(global::System.Int32 match_id)
        {
            matches matches = new matches();
            matches.match_id = match_id;
            return matches;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 match_id
        {
            get
            {
                return _match_id;
            }
            set
            {
                if (_match_id != value)
                {
                    Onmatch_idChanging(value);
                    ReportPropertyChanging("match_id");
                    _match_id = StructuralObject.SetValidValue(value, "match_id");
                    ReportPropertyChanged("match_id");
                    Onmatch_idChanged();
                }
            }
        }
        private global::System.Int32 _match_id;
        partial void Onmatch_idChanging(global::System.Int32 value);
        partial void Onmatch_idChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Forbbiden_FEIModel", "FK_match_cards_match", "match_cards")]
        public EntityCollection<match_cards> match_cards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<match_cards>("Forbbiden_FEIModel.FK_match_cards_match", "match_cards");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<match_cards>("Forbbiden_FEIModel.FK_match_cards_match", "match_cards", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Forbbiden_FEIModel", "FK_match_minigames_match", "match_minigames")]
        public EntityCollection<match_minigames> match_minigames
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<match_minigames>("Forbbiden_FEIModel.FK_match_minigames_match", "match_minigames");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<match_minigames>("Forbbiden_FEIModel.FK_match_minigames_match", "match_minigames", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Forbbiden_FEIModel", "FK_match_players_match", "match_players")]
        public EntityCollection<match_players> match_players
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<match_players>("Forbbiden_FEIModel.FK_match_players_match", "match_players");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<match_players>("Forbbiden_FEIModel.FK_match_players_match", "match_players", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Forbbiden_FEIModel", "FK_match_tiles_match", "match_tiles")]
        public EntityCollection<match_tiles> match_tiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<match_tiles>("Forbbiden_FEIModel.FK_match_tiles_match", "match_tiles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<match_tiles>("Forbbiden_FEIModel.FK_match_tiles_match", "match_tiles", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Forbbiden_FEIModel", Name="minigame")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class minigame : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new minigame object.
        /// </summary>
        /// <param name="minigame_id">Initial value of the minigame_id property.</param>
        public static minigame Createminigame(global::System.Int32 minigame_id)
        {
            minigame minigame = new minigame();
            minigame.minigame_id = minigame_id;
            return minigame;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 minigame_id
        {
            get
            {
                return _minigame_id;
            }
            set
            {
                if (_minigame_id != value)
                {
                    Onminigame_idChanging(value);
                    ReportPropertyChanging("minigame_id");
                    _minigame_id = StructuralObject.SetValidValue(value, "minigame_id");
                    ReportPropertyChanged("minigame_id");
                    Onminigame_idChanged();
                }
            }
        }
        private global::System.Int32 _minigame_id;
        partial void Onminigame_idChanging(global::System.Int32 value);
        partial void Onminigame_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String minigame_name
        {
            get
            {
                return _minigame_name;
            }
            set
            {
                Onminigame_nameChanging(value);
                ReportPropertyChanging("minigame_name");
                _minigame_name = StructuralObject.SetValidValue(value, true, "minigame_name");
                ReportPropertyChanged("minigame_name");
                Onminigame_nameChanged();
            }
        }
        private global::System.String _minigame_name;
        partial void Onminigame_nameChanging(global::System.String value);
        partial void Onminigame_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> timer
        {
            get
            {
                return _timer;
            }
            set
            {
                OntimerChanging(value);
                ReportPropertyChanging("timer");
                _timer = StructuralObject.SetValidValue(value, "timer");
                ReportPropertyChanged("timer");
                OntimerChanged();
            }
        }
        private Nullable<global::System.Int32> _timer;
        partial void OntimerChanging(Nullable<global::System.Int32> value);
        partial void OntimerChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Forbbiden_FEIModel", "FK_match_minigame_minigame", "match_minigames")]
        public EntityCollection<match_minigames> match_minigames
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<match_minigames>("Forbbiden_FEIModel.FK_match_minigame_minigame", "match_minigames");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<match_minigames>("Forbbiden_FEIModel.FK_match_minigame_minigame", "match_minigames", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Forbbiden_FEIModel", Name="player")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class player : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new player object.
        /// </summary>
        /// <param name="player_id">Initial value of the player_id property.</param>
        /// <param name="player_name">Initial value of the player_name property.</param>
        /// <param name="player_password">Initial value of the player_password property.</param>
        public static player Createplayer(global::System.Int32 player_id, global::System.String player_name, global::System.String player_password)
        {
            player player = new player();
            player.player_id = player_id;
            player.player_name = player_name;
            player.player_password = player_password;
            return player;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 player_id
        {
            get
            {
                return _player_id;
            }
            set
            {
                if (_player_id != value)
                {
                    Onplayer_idChanging(value);
                    ReportPropertyChanging("player_id");
                    _player_id = StructuralObject.SetValidValue(value, "player_id");
                    ReportPropertyChanged("player_id");
                    Onplayer_idChanged();
                }
            }
        }
        private global::System.Int32 _player_id;
        partial void Onplayer_idChanging(global::System.Int32 value);
        partial void Onplayer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String player_name
        {
            get
            {
                return _player_name;
            }
            set
            {
                Onplayer_nameChanging(value);
                ReportPropertyChanging("player_name");
                _player_name = StructuralObject.SetValidValue(value, false, "player_name");
                ReportPropertyChanged("player_name");
                Onplayer_nameChanged();
            }
        }
        private global::System.String _player_name;
        partial void Onplayer_nameChanging(global::System.String value);
        partial void Onplayer_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String player_username
        {
            get
            {
                return _player_username;
            }
            set
            {
                Onplayer_usernameChanging(value);
                ReportPropertyChanging("player_username");
                _player_username = StructuralObject.SetValidValue(value, true, "player_username");
                ReportPropertyChanged("player_username");
                Onplayer_usernameChanged();
            }
        }
        private global::System.String _player_username;
        partial void Onplayer_usernameChanging(global::System.String value);
        partial void Onplayer_usernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String player_password
        {
            get
            {
                return _player_password;
            }
            set
            {
                Onplayer_passwordChanging(value);
                ReportPropertyChanging("player_password");
                _player_password = StructuralObject.SetValidValue(value, false, "player_password");
                ReportPropertyChanged("player_password");
                Onplayer_passwordChanged();
            }
        }
        private global::System.String _player_password;
        partial void Onplayer_passwordChanging(global::System.String value);
        partial void Onplayer_passwordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String player_email
        {
            get
            {
                return _player_email;
            }
            set
            {
                Onplayer_emailChanging(value);
                ReportPropertyChanging("player_email");
                _player_email = StructuralObject.SetValidValue(value, true, "player_email");
                ReportPropertyChanged("player_email");
                Onplayer_emailChanged();
            }
        }
        private global::System.String _player_email;
        partial void Onplayer_emailChanging(global::System.String value);
        partial void Onplayer_emailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String player_avatar
        {
            get
            {
                return _player_avatar;
            }
            set
            {
                Onplayer_avatarChanging(value);
                ReportPropertyChanging("player_avatar");
                _player_avatar = StructuralObject.SetValidValue(value, true, "player_avatar");
                ReportPropertyChanged("player_avatar");
                Onplayer_avatarChanged();
            }
        }
        private global::System.String _player_avatar;
        partial void Onplayer_avatarChanging(global::System.String value);
        partial void Onplayer_avatarChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Forbbiden_FEIModel", "FK_players_player", "match_players")]
        public EntityCollection<match_players> match_players
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<match_players>("Forbbiden_FEIModel.FK_players_player", "match_players");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<match_players>("Forbbiden_FEIModel.FK_players_player", "match_players", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Forbbiden_FEIModel", "FK_player_socialmedia", "player_socialmedia")]
        public EntityCollection<player_socialmedia> player_socialmedia
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<player_socialmedia>("Forbbiden_FEIModel.FK_player_socialmedia", "player_socialmedia");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<player_socialmedia>("Forbbiden_FEIModel.FK_player_socialmedia", "player_socialmedia", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Forbbiden_FEIModel", Name="player_socialmedia")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class player_socialmedia : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new player_socialmedia object.
        /// </summary>
        /// <param name="social_media">Initial value of the social_media property.</param>
        public static player_socialmedia Createplayer_socialmedia(global::System.Int32 social_media)
        {
            player_socialmedia player_socialmedia = new player_socialmedia();
            player_socialmedia.social_media = social_media;
            return player_socialmedia;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 social_media
        {
            get
            {
                return _social_media;
            }
            set
            {
                if (_social_media != value)
                {
                    Onsocial_mediaChanging(value);
                    ReportPropertyChanging("social_media");
                    _social_media = StructuralObject.SetValidValue(value, "social_media");
                    ReportPropertyChanged("social_media");
                    Onsocial_mediaChanged();
                }
            }
        }
        private global::System.Int32 _social_media;
        partial void Onsocial_mediaChanging(global::System.Int32 value);
        partial void Onsocial_mediaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> player_id
        {
            get
            {
                return _player_id;
            }
            set
            {
                Onplayer_idChanging(value);
                ReportPropertyChanging("player_id");
                _player_id = StructuralObject.SetValidValue(value, "player_id");
                ReportPropertyChanged("player_id");
                Onplayer_idChanged();
            }
        }
        private Nullable<global::System.Int32> _player_id;
        partial void Onplayer_idChanging(Nullable<global::System.Int32> value);
        partial void Onplayer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String social_link
        {
            get
            {
                return _social_link;
            }
            set
            {
                Onsocial_linkChanging(value);
                ReportPropertyChanging("social_link");
                _social_link = StructuralObject.SetValidValue(value, true, "social_link");
                ReportPropertyChanged("social_link");
                Onsocial_linkChanged();
            }
        }
        private global::System.String _social_link;
        partial void Onsocial_linkChanging(global::System.String value);
        partial void Onsocial_linkChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Forbbiden_FEIModel", "FK_player_socialmedia", "player")]
        public player player
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<player>("Forbbiden_FEIModel.FK_player_socialmedia", "player").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<player>("Forbbiden_FEIModel.FK_player_socialmedia", "player").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<player> playerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<player>("Forbbiden_FEIModel.FK_player_socialmedia", "player");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<player>("Forbbiden_FEIModel.FK_player_socialmedia", "player", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Forbbiden_FEIModel", Name="tile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new tile object.
        /// </summary>
        /// <param name="tile_id">Initial value of the tile_id property.</param>
        /// <param name="flooded_level">Initial value of the flooded_level property.</param>
        /// <param name="type">Initial value of the type property.</param>
        public static tile Createtile(global::System.Int32 tile_id, global::System.Int32 flooded_level, global::System.String type)
        {
            tile tile = new tile();
            tile.tile_id = tile_id;
            tile.flooded_level = flooded_level;
            tile.type = type;
            return tile;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 tile_id
        {
            get
            {
                return _tile_id;
            }
            set
            {
                if (_tile_id != value)
                {
                    Ontile_idChanging(value);
                    ReportPropertyChanging("tile_id");
                    _tile_id = StructuralObject.SetValidValue(value, "tile_id");
                    ReportPropertyChanged("tile_id");
                    Ontile_idChanged();
                }
            }
        }
        private global::System.Int32 _tile_id;
        partial void Ontile_idChanging(global::System.Int32 value);
        partial void Ontile_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 flooded_level
        {
            get
            {
                return _flooded_level;
            }
            set
            {
                Onflooded_levelChanging(value);
                ReportPropertyChanging("flooded_level");
                _flooded_level = StructuralObject.SetValidValue(value, "flooded_level");
                ReportPropertyChanged("flooded_level");
                Onflooded_levelChanged();
            }
        }
        private global::System.Int32 _flooded_level;
        partial void Onflooded_levelChanging(global::System.Int32 value);
        partial void Onflooded_levelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String type
        {
            get
            {
                return _type;
            }
            set
            {
                OntypeChanging(value);
                ReportPropertyChanging("type");
                _type = StructuralObject.SetValidValue(value, false, "type");
                ReportPropertyChanged("type");
                OntypeChanged();
            }
        }
        private global::System.String _type;
        partial void OntypeChanging(global::System.String value);
        partial void OntypeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Forbbiden_FEIModel", "FK_tile_match_tile", "match_tiles")]
        public EntityCollection<match_tiles> match_tiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<match_tiles>("Forbbiden_FEIModel.FK_tile_match_tile", "match_tiles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<match_tiles>("Forbbiden_FEIModel.FK_tile_match_tile", "match_tiles", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
